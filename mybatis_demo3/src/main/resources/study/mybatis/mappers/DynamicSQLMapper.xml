<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="study.mybatis.mappers.DynamicSQLMapper">

  <!-- <sql id="id"> -->
  <!-- <include refid="參照Id"> -->
  <sql id="empColumns">eid,emp_name,age,sex,email</sql>
  <!-- select -->
  <!-- public List<Emp> getEmpByCondition(); -->
  <!-- 1=1 成立條件防止第一個條件未填時語法錯誤 -->
  <select id="getEmpByCondition" resultType="Emp">
    <!-- 1. if -->
    <!-- select * from t_emp where 1=1
        <if test="empName != null and empName != ''">
    emp_name = #{empName} and
        </if>
        <if test="age != null and age != ''">
          age
    = #{age} and
        </if>
        <if test="sex != null and sex != ''">
          and sex =
    #{sex}
        </if>
        <if test="email != null and email != ''">
          and email =
    #{email}
        </if> -->
    <!-- 2. where -->
    <!-- select * from t_emp -->
    <!-- where tag 可自動判斷(or,and)和生成SQL語法  -->
    <!-- <where>
        <if test="empName != null and empName != ''">
          and emp_name =
    #{empName}
        </if>
        <if test="age != null and age != ''">
          and age =
    #{age}
        </if>
        <if test="sex != null and sex != ''">
          and sex = #{sex}
    </if>
        <if test="email != null and email != ''">
          and email = #{email}
        </if>
    </where> -->
    <!-- 3. trim -->
    <!-- preffixsuffix: 將trim tag 中內容前後添加指定內容 -->
    <!-- preffixOverrides|suffixOverrdes: 將trim tag 中內容前後去除指定內容 --> select <include refid="empColumns"></include>
    from t_emp <trim prefix="where"
      suffixOverrides="and|or">
      <if test="empName != null and empName != ''"> emp_name = #{empName} and </if>
        <if
        test="age != null and age != ''"> age = #{age} or </if>
        <if test="sex != null and sex != ''">
    sex = #{sex} and </if>
        <if test="email != null and email != ''"> email = #{email} </if>
    </trim>
  </select>

  <!-- public List<Emp> getEmpByChoose(Emp emp); -->
  <select id="getEmpByChoose" resultType="Emp"> select * from t_emp <where>
      <choose>
        <when test="empName != null and empName != ''"> emp_name = #{empName} </when>
        <when test="age != null and age != ''"> age = #{age} </when>
        <when test="sex != null and sex != ''"> sex = #{sex} </when>
        <when test="email != null and email != ''"> email = #{email} </when>
        <otherwise> did = 1 </otherwise>
      </choose>
    </where>
  </select>

  <!-- delete -->
  <!-- public int deleteMoreByArray(Integer[] eids); -->
  <!-- <foreach collection="參數" item="迭代值" separator="分隔符號" close="結束加上內容" open="開始加上內容"> -->
  <delete id="deleteMoreByArray">
    <!-- delete from t_emp where eid in -->
    <!-- <foreach collection="eids" item="eid" separator="," open="(" close=")"> #{eid} </foreach> --> delete from t_emp where <foreach collection="eids" item="eid"
      separator="or"> eid = #{eid} </foreach>
  </delete>

  <!-- insert -->
  <!-- public int insertMoreByList(@Param("emps") List<Emp> emps); -->
  <insert id="insertMoreByList"> insert into t_emp values <foreach collection="emps" item="emp"
      separator=","> (null,#{emp.empName}, #{emp.age}, #{emp.sex}, #{emp.email}, null) </foreach>
  </insert>

</mapper>
